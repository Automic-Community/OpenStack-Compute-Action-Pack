*** Settings ***
Suite Setup       Startup
Suite Teardown    Teardown
Force Tags        check_server_status
Default Tags
Test Template     Check Server Status Template
Library           com.automic.robot.itpa.ItpaLibrary
Resource          ../../Resources/messages.txt
Resource          ../../Resources/keywords.txt
Resource          ../../Resources/variables.txt
Resource          ../../Resources/actions.txt

*** Test Cases ***    OK_NOK    ComputeURL              TokenID                TenantID                ServerID                TargetStatus    FailIf    RetryCount    RetryInterval
Asserting behavior of action when original status of server at openstack is selected as Target Status
                      [Tags]    main_scenarios
                      OK        ${OS_Compute_URL}       blank                  blank                   blank                   ACTIVE          YES       5             10

Asserting behavior of action when original status of server at openstack is not known and "Fail action if target status is not reached" is selected as NO.
                      OK        ${OS_Compute_URL}       blank                  blank                   blank                   SUSPENDED       NO        5             10

Asserting behavior of action when "Any" is selected as Target Status.
                      OK        ${OS_Compute_URL}       blank                  blank                   blank                   ANY             YES       5             10

Assertion with Invalid Compute URL
                      NOK       https://162.123.12.3    blank                  blank                   blank                   ACTIVE          YES       5             10

Assertion with Invalid Authentication Token
                      NOK       ${OS_Compute_URL}       ${Invalid_Token_ID}    blank                   blank                   ACTIVE          YES       5             10

Assertion with Invalid Tenant ID
                      NOK       ${OS_Compute_URL}       blank                  ${Invalid_Tenant_ID}    blank                   ACTIVE          YES       5             10

Assertion with Invalid Server ID
                      NOK       ${OS_Compute_URL}       blank                  blank                   ${Invalid_Server_ID}    ACTIVE          YES       5             10

Asserting behavior when invalid Target Status is selected.
                      NOK       ${OS_Compute_URL}       blank                  blank                   blank                   SUSPENDED       YES       5             10

Assert Compute URL as a mandatory field
                      OTHER     ${EMPTY}                blank                  blank                   ${Invalid_Server_ID}    ACTIVE          YES       5             10

Assert Authentication Token as a mandatory field
                      OTHER     ${OS_Compute_URL}       ${EMPTY}               blank                   ${Invalid_Server_ID}    ACTIVE          YES       5             10

Assert Tenant ID as a mandatory field
                      OTHER     ${OS_Compute_URL}       blank                  ${EMPTY}                ${Invalid_Server_ID}    ACTIVE          YES       5             10

Assert Server ID as a mandatory field
                      OTHER     ${OS_Compute_URL}       blank                  blank                   ${EMPTY}                ACTIVE          YES       5             10

*** Keywords ***
Startup
    Log    *******Start Test "CHECK SERVER STATUS"*******
    Log    *******Connect to AE*******
    Connect AE

Check Server Status Template
    [Arguments]    ${OK_NOK}    ${Compute_URL}    ${Token_ID}    ${Tenant_ID}    ${Server_ID}    ${Target_Status}
    ...    ${Fail_If}    ${Retry_Count}    ${Retry_Interval}
    [Documentation]    This test check's the state of a server.
    ...    -${OK_NOK}: Boolean value indicate if the action is ENDED_OK or ENDED_NOT_OK. Value of this variable should be OK, NOK or OTHER.
    ...    -${Compute_URL}: This field specifies OpenStack Compute URL.
    ...    -${Token_ID}: This field specifies Token ID generated as the output of Get Auth Token action.
    ...    -${Tenant_ID}: This field specifies Tenant ID generated as the output of Get Auth Token action.
    ...    -${Server_ID}: This field specifies Server ID whose state is to be compared.
    ...    -${Target_Status}: This field specifies the target status of server which user is expecting.
    ...    -${Fail_If}: This is a radio button wiht yes and no as value which means "Yes: action fails if target status is not reached and No: action always executes successful"
    ...    -${Retry_Count}: This field specifies the number of count user wants to retry to get that server status(default 5 times).
    ...    -${Retry_Interval}: This field specifies the time interval user wants to retry to get that server status(default 10 sec).
    #    blank input means Token ID and Tenant ID will get values from the output of Get Auth Token also Server ID generated from Create Server.
    #    Empty input means that field is left empty.
    #    By invalid target status test case, it means original state of server on openstack is known and target status selected is other than that original state.
    Run Keyword If    '${Generated_Token_ID}' == '${EMPTY}'    Get Auth Token    ${OS_Identity_URL}    ${UserName_OS}    ${Password_OS}    ${Name_Tenant}
    Run Keyword If    '${Generated_Server_ID}' == '${EMPTY}'    Create Server    ${OS_Compute_URL}    ${Generated_Token_ID}    ${Generated_Tenant_ID}    ${Valid_Create_Server}
    Run Keyword If    '${Generated_Server_ID}' == '${EMPTY}'    Get Server ID    ${OS_Identity_URL}    ${UserName_OS}    ${Password_OS}    ${Name_Tenant}
    ...    ${OS_Compute_URL}    ${Query}
    Action Create    ${_CHECK_SERVER_STATUS_ACTION}
    Action Set    &UC4RB_OPS_COMPUTE_URL#    ${Compute_URL}
    Run Keyword If    '${Token_ID}' == 'blank'    Action Set    &UC4RB_OPS_AUTH_TOKEN#    ${Generated_Token_ID}
    Run Keyword If    '${Token_ID}' != 'blank'    Action Set    &UC4RB_OPS_AUTH_TOKEN#    ${Token_ID}
    Run Keyword If    '${Tenant_ID}' == 'blank'    Action Set    &UC4RB_OPS_TENANT_ID#    ${Generated_Tenant_ID}
    Run Keyword If    '${Tenant_ID}' != 'blank'    Action Set    &UC4RB_OPS_TENANT_ID#    ${Tenant_ID}
    Run Keyword If    '${Server_ID}' == 'blank'    Action Set    &UC4RB_OPS_SERVER_ID#    ${Generated_Server_ID}
    Run Keyword If    '${Server_ID}' != 'blank'    Action Set    &UC4RB_OPS_SERVER_ID#    ${Server_ID}
    Action Set    &UC4RB_OPS_TARGET_STATUS#    ${Target_Status}
    Action Set    &UC4RB_OPS_MATCH#    ${Fail_If}
    Action Set    &UC4RB_OPS_RETRY_COUNT#    ${Retry_Count}
    Action Set    &UC4RB_OPS_RETRY_INTERVAL#    ${Retry_Interval}
    Set Overwrite Agent
    Action Execute
    Run Keyword If    '${OK_NOK}' == 'OK'    Assert Success    ELSE IF    '${OK_NOK}' == 'NOK'    Assert Failure    ELSE
    ...    Assert Mandatory
    Run Keyword If    '${OK_NOK}' == 'OK'    Action Object Variable Should Be Found    &UC4RB_OPS_SERVER_STATUS#    ELSE    Action Object Variable Should Not Be Found    &UC4RB_OPS_SERVER_STATUS#
    Run Keyword If    '${Server_ID}' == '${EMPTY}'    Delete Server    ${OS_Compute_URL}    ${Generated_Token_ID}    ${Generated_Tenant_ID}    ${Generated_Server_ID}

Teardown
    Log    *******End Test "CHECK SERVER STATUS"*******
